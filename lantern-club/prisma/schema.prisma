datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // Only needed when using a cloud provider that doesn't support the creation of new databases, like Heroku. Learn more: https://pris.ly/d/migrate-shadow
}


generator client {
  provider        = "prisma-client-js"
  // previewFeatures = ["referentialActions"] // You won't need this in Prisma 3.X or higher.
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime 
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  admin         Boolean  @default(false) // Added this line
}

model VerificationToken {
  identifier String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Event {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String
  date         String
  startTime    String
  endTime      String
  location     String
  host         String 
  imageURL     String
  isPast       Boolean
}

model Magazine {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  Name         String 
  author       String
  cloudURL     String
  publishdate  DateTime
}

model FeaturedMag {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  cloudURL     String
}

model Profile {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String 
  pronouns     String
  title        String
  email        String @unique
  major        String
  pictureURL   String
}


